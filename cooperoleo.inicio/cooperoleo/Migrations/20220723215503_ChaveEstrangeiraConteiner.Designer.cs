// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using cooperoleo.Contexto;

#nullable disable

namespace cooperoleo.Migrations
{
    [DbContext(typeof(CooperContext))]
    [Migration("20220723215503_ChaveEstrangeiraConteiner")]
    partial class ChaveEstrangeiraConteiner
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("cooperoleo.Models.CondominioModel", b =>
                {
                    b.Property<int>("CondominioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CondominioId"), 1L, 1);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("ContatoId")
                        .HasColumnType("int");

                    b.Property<int>("ConteinerId")
                        .HasColumnType("int");

                    b.Property<string>("Endereco")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NomeCondominio")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("CondominioId");

                    b.HasIndex("ContatoId");

                    b.HasIndex("ConteinerId");

                    b.ToTable("Condominio");
                });

            modelBuilder.Entity("cooperoleo.Models.ContatoModel", b =>
                {
                    b.Property<int>("ContatoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContatoId"), 1L, 1);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("ContatoId");

                    b.ToTable("Contato");
                });

            modelBuilder.Entity("cooperoleo.Models.ConteinerModel", b =>
                {
                    b.Property<int>("ConteinerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConteinerId"), 1L, 1);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<bool>("Disponibilidade")
                        .HasColumnType("bit");

                    b.HasKey("ConteinerId");

                    b.ToTable("Conteineres");
                });

            modelBuilder.Entity("cooperoleo.Models.CondominioModel", b =>
                {
                    b.HasOne("cooperoleo.Models.ContatoModel", "Contato")
                        .WithMany()
                        .HasForeignKey("ContatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("cooperoleo.Models.ConteinerModel", "Conteiner")
                        .WithMany()
                        .HasForeignKey("ConteinerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contato");

                    b.Navigation("Conteiner");
                });
#pragma warning restore 612, 618
        }
    }
}
